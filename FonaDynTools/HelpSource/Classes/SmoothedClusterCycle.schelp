TITLE:: SmoothedClusterCycle
summary:: Generates information describing the shape of cluster cycles.
categories:: Tools>UGens
related:: Classes/DrawableClusterCycle

DESCRIPTION::
This is a UGen that generates information for cycles. Internally this UGen is structured in a similar manner to link::Classes/DFT2::. The information contains three key components for each cluster:

1. A fixed number of samples representing the shape of the cycle.

2. A smoothed sum of squared error. This is the difference between the old smoothed cycle and the new cycle. If these differ by a large amount it indicates that the cycle (1.) is bad, since it changes a lot. This value is smoothed since one bad cycle shouldn't give a bad (large) squared error.

3. The peak smoothed sum of squared error. This value gives an estimation of how much the cycle has changed its shape over the course of the recording.

The shape of the cycle is generated via smoothing each sample representing the cycle.

In pseudocode it roughly does the following:
code::
{ | cycle, clusterNumber, smoothFactor |
	var invSmoothFactor = 1 - smoothFactor;
	var squaredError;
	c = normalize(cycle); // Normalize the cycle
	c = resample(c, nSamples); // Resample the cycle into nSamples samples.
	for (0, nSamples-1, {
		| i |
		// Smoothed is essentially the contents of the buffer
		smoothed[clusterNumber][i] = (smoothed[clusterNumber][i] * smoothFactor) + (c[i] * invSmoothFactor);
	});

	squaredError = sum( (c - smoothed[clusterNumber])**2 );
	smoothedSquaredError[clusterNumber] = (smoothedSquaredError[clusterNumber] * smoothFactor) + (squaredError * invSmoothFactor);

	if (smoothedSquaredError[clusterNumber] > peakSmoothedSquaredError[clusterNumber], {
		peakSmoothedSquaredError[clusterNumber] = smoothedSquaredError[clusterNumber];
	});
}
::

CLASSMETHODS::

METHOD:: ar

ARGUMENT:: bufnum
The link::Classes/Buffer:: allocated with link::#*allocBuffer::.

ARGUMENT:: in
The input EGG signal.

ARGUMENT:: gateCycle
The cycle gate. This gate should indicate where the new cycle begins and the old cycle ends.

ARGUMENT:: gateFilteredDFT
The filtered DFT output gate is used to filter bad cycles from being used.

ARGUMENT:: clusterNumber
The cluster number so the UGen knows which cluster the cycle belongs to. This value needs to be valid only when gateFilteredDFT is open (>0).

ARGUMENT:: nClusters
The number of clusters available. This is required since this UGen is forced to use a single-channel link::Classes/Buffer::. The reason behind this has to do with link::Classes/Buffer#-loadToFloatArray:: which writes the contents to a file. This file has a limit on the number of channels, and since this UGen is pointless if the link::Classes/Buffer:: cannot be retrieved by the client, it is vital to use a single channel link::Classes/Buffer::.

ARGUMENT:: minSamples
The minimum number of samples representing a valid cycle.

ARGUMENT:: maxSamples
The maximum number of samples representing a valid cycle.

NOTE::Too many or few samples indicates erronous cycle separation.::

ARGUMENT:: smoothFactor
The smooth factor used for the smoothing.

NOTE::The smooth factor strong::f:: is applied as: smoothed = f * smoothed + (1 - f) * new::

METHOD:: allocBuffer
ARGUMENT:: server
The server where the buffer should be allocated.

ARGUMENT:: nClusters
The number of clusters available.

ARGUMENT:: nSamples
The number of samples used to represent a cycle.

returns:: a link::Classes/Buffer:: instance large enough to hold the data.

METHOD:: getCycleData
Splits the data in the link::Classes/Buffer:: into an array: [cycleData, smoothedSumOfSquaredError, peakSmoothedSumOfSquaredError]

ARGUMENT:: data
The entire contents of the link::Classes/Buffer:: as an link::Classes/Array::.

ARGUMENT:: index
A cluster number.

ARGUMENT:: nClusters
The number of available clusters.

ARGUMENT:: nSamples
The number of samples representing the cycle data.

returns:: [cycleData, smoothedSumOfSquaredError, peakSmoothedSumOfSquaredError]

METHOD:: getCycleDataRange
Does the same job as link::#*getCycleData:: but rather than grabbing a copy of the range from data, it returns the range.

ARGUMENT:: data
The entire contents of the link::Classes/Buffer:: as an link::Classes/Array::.

ARGUMENT:: index
A cluster number.

ARGUMENT:: nClusters
The number of available clusters.

ARGUMENT:: nSamples
The number of samples representing the cycle data.

returns:: [[first, last], smoothedSumOfSquaredError, peakSmoothedSumOfSquaredError], where the indices first and last indicate the index range for the cycleData.

METHOD:: splitData
Does the same job as link::#*getCycleData::, but for all clusters.

ARGUMENT:: data
The entire contents of the link::Classes/Buffer:: as an link::Classes/Array::.

ARGUMENT:: nClusters
The number of available clusters.

ARGUMENT:: nSamples
The number of samples representing the cycle data.

returns:: [Array with cycle data per cluster, Array with smoothedSumOfSquaredError per cluster, Array with peakSmoothedSumOfSquaredError per cluster]


INSTANCEMETHODS::
