TITLE:: DrawableMovingEGG
summary:: Class letting the user draw the Buffer contents from the MovingEGG UGen in a UserView.
categories:: Tools>GUI
related:: Classes/MovingEGG

DESCRIPTION::
This class utilizes the link::Classes/Buffer:: contents from the MovingEGG UGen, and draws them as shades of gray. Where white indicates the oldest data and black the newest. The background color for the link::Classes/DrawableMovingEGG::'s link::Classes/UserView:: should be white.

CLASSMETHODS::

METHOD:: new
ARGUMENT:: count
The number of overlapping EGG cycles being drawn.

ARGUMENT:: samples
The number of samples used to estimate one EGG cycle.

ARGUMENT:: normalize
True if the data is normalized, false otherwise. If the data is normalized it is expected to range from [0, 1], and from [-1, 1] otherwise.

returns:: A new link::Classes/DrawableMovingEGG::.

INSTANCEMETHODS::

METHOD:: draw
Draws the MovingEGG inside the provided link::Classes/UserView::.

ARGUMENT:: userView
The link::Classes/UserView:: where the MovingEGG should be drawn.

METHOD:: init
See link::#*new::.

METHOD:: data
Can be used to set the data member.

ARGUMENT:: arr
The updated data. If arr.size != samples * count, this is equivalent to data = nil.

EXAMPLES::

code::
(
Server.default.waitForBoot{
	var buffer = MovingEGG.allocBuffer(Server.default, 20, 80);
	var clock = TempoClock(24);
	var bufsize = buffer.numFrames * buffer.numChannels;
	var msg = buffer.getnMsg(0, bufsize);
	var w = Window();
	var uv = UserView(w.view, w.view.bounds).resize_(5).background_(Color.white);
	var dmegg = DrawableMovingEGG(20, 80, true);

	var synth = {
		var in = SinOsc.ar(20);
		var noise = WhiteNoise.ar(0.05);
		var gate = Trig1.ar(in, 0);
		MovingEGG.ar(buffer, in + noise, gate, 20, 100, 4410, 1);
	}.play;

	var oscf = OSCFunc({ | msg |
		var data = msg.copyToEnd(4);
		dmegg.data = data.copy;
	}, '/b_setn', Server.default.addr, nil);

	clock.sched(1, {
		Server.default.listSendMsg(msg);
		{ uv.refresh; }.defer;
		1
	});

	uv.drawFunc_{
		dmegg.draw(uv);
	};

	w.front;
};
)
::