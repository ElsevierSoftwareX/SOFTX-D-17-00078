class:: GatedBufWr
summary:: Writes data to a buffer, using a gate to control when data is written.
categories:: UGens>Buffer
related:: Classes/BufWr

Description::
This is an alternative to link::Classes/BufWr::, which allows the user to control when data is written into the buffer.

classmethods::

method::kr

argument::inputArray
An array of input signals, that will be written to the buffer when the gate is open. The values are written into channels 0..(inputArray.size - 1).

argument::bufnum
The output buffer. Note that this buffer will need at least as many channels as there are elements in the inputArray.

argument::gate
The gate that controls when data is written into the buffer. When gate > 0, data is written, otherwise nothing is written.

argument::phase
A Demand rate UGen to control where in the buffer the next received value is written. See link::Classes/Dseries::, link::Classes/Dser:: and link::Classes/Dseq::.

argument::loop
1 if the phase should wrap around once the end of the buffer is reached, 0 otherwise.

returns::
The index of the last written data.

Examples::

code::
b = Buffer.alloc(s, 1000, 6);
b.plot.superpose_(false);
b.free;

(
{
	var out1 = WhiteNoise.ar();
	var out2 = BrownNoise.kr();
	var out3 = GrayNoise.ar();
	var out4 = PinkNoise.kr();
	var out5 = PinkNoise.ar() + GrayNoise.ar();
	var out6 = WhiteNoise.ar() + BrownNoise.ar();
	var gate = Trig1.ar(SinOsc.ar(30), 0); // Write data into the buffer roughly 30 times per second.
	var phase = Dseries(0);

	GatedBufWr.kr([out1, out2, out3, out4, out5, out6], b, gate, phase)
}.scope;
)
::
